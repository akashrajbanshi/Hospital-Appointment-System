/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stratford.view;

import com.stratford.controller.AppointmentController;
import com.stratford.controller.PatientController;
import com.stratford.model.Appointment;
import com.stratford.model.Login;
import com.stratford.model.Patient;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akash Rajbanshi
 */
public class PatientDialogForm extends javax.swing.JDialog {

    PatientController patientController;
    AppointmentController appointmentController;
    JTable jTable;

    /**
     * Creates new form PatientDialogForm
     */
    public PatientDialogForm(java.awt.Frame parent, boolean modal, JTable jTable) {
        super(parent, modal);
        this.jTable = jTable;
        this.setResizable(false);
        initComponents();
        final Toolkit toolkit = Toolkit.getDefaultToolkit();
        final Dimension screenSize = toolkit.getScreenSize();
        final int x = (screenSize.width - this.getWidth()) / 2;
        final int y = (screenSize.height - this.getHeight()) / 2;
        this.setLocation(x, y);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons/editUser.png")));
    }
    
     private PatientDialogForm(JFrame jFrame, boolean b) {

    }

    void setPatientInfo(String patientId) {

        patientController = new PatientController();
        Patient patient = patientController.getPatientInfoWithUserNameAndPassword(patientId);

        this.editfirstNameTxtField.setText(patient.getFirstName());
        this.editlastNameTxtField.setText(patient.getLastName());
        this.editdateOfBirthDateChooser.setDate(patient.getDateOfBirth());
        this.editemailTextField.setText(patient.getEmail());
        this.editusernameTxtField.setText(patient.getLogin().getUsername());
        this.editpasswordPwdField.setText(patient.getLogin().getPassword());
        this.editconfirmPasswordPwdField.setText(patient.getLogin().getPassword());

        this.hiddenPatientId.setText(patientId);
        this.hiddenPatientId.setVisible(false);
        this.hiddenLoginId.setText(String.valueOf(patient.getLogin().getId()));
        this.hiddenLoginId.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        editFirstNameLabel = new javax.swing.JLabel();
        editfirstNameTxtField = new javax.swing.JTextField();
        editlastNameTxtField = new javax.swing.JTextField();
        editlastNameLabel = new javax.swing.JLabel();
        editdobLabel = new javax.swing.JLabel();
        editdateOfBirthDateChooser = new com.toedter.calendar.JDateChooser();
        editemailLabel = new javax.swing.JLabel();
        editemailTextField = new javax.swing.JTextField();
        editusernameLabel = new javax.swing.JLabel();
        editusernameTxtField = new javax.swing.JTextField();
        editpasswordPwdField = new javax.swing.JPasswordField();
        editpasswordLabel = new javax.swing.JLabel();
        editconfirmPasswordLabel = new javax.swing.JLabel();
        editconfirmPasswordPwdField = new javax.swing.JPasswordField();
        editUpdatePatientBtn = new javax.swing.JButton();
        editcancelBtn = new javax.swing.JButton();
        hiddenPatientId = new javax.swing.JLabel();
        hiddenLoginId = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Patient Info");

        editFirstNameLabel.setText("First Name:");

        editlastNameLabel.setText("Last Name:");

        editdobLabel.setText("Date of Birth:");

        editdateOfBirthDateChooser.setDateFormatString("yyyy-MM-dd");

        editemailLabel.setText("Email:");

        editusernameLabel.setText("Username:");

        editusernameTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editusernameTxtFieldActionPerformed(evt);
            }
        });

        editpasswordLabel.setText("Password:");

        editconfirmPasswordLabel.setText("Confirm Password:");

        editconfirmPasswordPwdField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                editconfirmPasswordPwdFieldFocusLost(evt);
            }
        });

        editUpdatePatientBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/submit.png"))); // NOI18N
        editUpdatePatientBtn.setText("Update");
        editUpdatePatientBtn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                editUpdatePatientBtnFocusLost(evt);
            }
        });
        editUpdatePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUpdatePatientBtnActionPerformed(evt);
            }
        });

        editcancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        editcancelBtn.setText("Cancel");
        editcancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editcancelBtnActionPerformed(evt);
            }
        });

        hiddenPatientId.setText("jLabel2");
        hiddenPatientId.setEnabled(false);

        hiddenLoginId.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hiddenPatientId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hiddenLoginId))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(editlastNameLabel)
                                .addComponent(editFirstNameLabel)
                                .addComponent(editdobLabel)
                                .addComponent(editemailLabel))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(editdateOfBirthDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editfirstNameTxtField)
                                .addComponent(editlastNameTxtField)
                                .addComponent(editemailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(editusernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(editpasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(4, 4, 4))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(editconfirmPasswordLabel)
                                    .addGap(18, 18, 18)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(editusernameTxtField)
                                .addComponent(editpasswordPwdField)
                                .addComponent(editconfirmPasswordPwdField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editUpdatePatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editcancelBtn)
                .addGap(40, 40, 40))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {editUpdatePatientBtn, editcancelBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hiddenPatientId)
                    .addComponent(hiddenLoginId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editFirstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editfirstNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editlastNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editlastNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(editdateOfBirthDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editdobLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editemailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editemailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editusernameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editusernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editpasswordPwdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editpasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editconfirmPasswordPwdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editconfirmPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUpdatePatientBtn)
                    .addComponent(editcancelBtn))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {editUpdatePatientBtn, editcancelBtn});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editusernameTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editusernameTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editusernameTxtFieldActionPerformed

    private void editconfirmPasswordPwdFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editconfirmPasswordPwdFieldFocusLost
        char[] password = this.editpasswordPwdField.getPassword();
        char[] confPassword = this.editconfirmPasswordPwdField.getPassword();

        String password1 = new String(password);
        String confPassword1 = new String(confPassword);

        if (!password1.equalsIgnoreCase(confPassword1)) {
            JOptionPane.showMessageDialog(this, "Password must be same", "ERROR",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            this.editconfirmPasswordPwdField.setText("");
            this.editUpdatePatientBtn.setEnabled(false);
        } else {
            this.editUpdatePatientBtn.setEnabled(true);
        }
    }//GEN-LAST:event_editconfirmPasswordPwdFieldFocusLost

    private void editUpdatePatientBtnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editUpdatePatientBtnFocusLost

    }//GEN-LAST:event_editUpdatePatientBtnFocusLost

    
    public void loadAppointmentListTable(String patientID, JTable patientAppointmentTable) throws SQLException {
        appointmentController = new AppointmentController();
        List<Appointment> appointmentList = appointmentController.listAppointmentForPatient(patientID);
        String col[] = {"Patient ID","Appointment Id","First Name", "Last Name", "Date of Birth", "Doctor Name", "Appoinment Date", "Appointment Time"};

        DefaultTableModel tableModel = new DefaultTableModel(col, 0);

        for (Appointment appointment : appointmentList) {
            Object[] data = {appointment.getPatient().getId(), appointment.getId(),appointment.getPatient().getFirstName(), appointment.getPatient().getLastName(),
                appointment.getPatient().getDateOfBirth(), appointment.getDoctor().getName(),
                appointment.getAppointmentDate(), appointment.getAppointmentTime()
            };
            tableModel.addRow(data);
        }
        patientAppointmentTable.setModel(tableModel);

        patientAppointmentTable.removeColumn(patientAppointmentTable.getColumnModel().getColumn(0));
       

    }

    private void editUpdatePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUpdatePatientBtnActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you really want to update your profile?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                patientController = new PatientController();
                char[] pwd = this.editpasswordPwdField.getPassword();
                String password = new String(pwd);
                Patient patient = new Patient();
                patient.setFirstName(this.editfirstNameTxtField.getText());
                patient.setLastName(this.editlastNameTxtField.getText());
                patient.setDateOfBirth(this.editdateOfBirthDateChooser.getDate());
                patient.setEmail(this.editemailTextField.getText());
                patient.setId(Integer.parseInt(this.hiddenPatientId.getText()));
                patient.getLogin().setUsername(this.editusernameTxtField.getText());
                patient.getLogin().setPassword(password);
                patient.getLogin().setId(Integer.parseInt(this.hiddenLoginId.getText()));
                patientController.updatePatientInfo(patient);
                JOptionPane.showMessageDialog(this, "Update Successful!", "SUCCESS",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                loadAppointmentListTable(this.hiddenPatientId.getText(), jTable);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(PatientDialogForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editUpdatePatientBtnActionPerformed

    private void editcancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editcancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_editcancelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDialogForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PatientDialogForm dialog = new PatientDialogForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel editFirstNameLabel;
    private javax.swing.JButton editUpdatePatientBtn;
    private javax.swing.JButton editcancelBtn;
    private javax.swing.JLabel editconfirmPasswordLabel;
    private javax.swing.JPasswordField editconfirmPasswordPwdField;
    private com.toedter.calendar.JDateChooser editdateOfBirthDateChooser;
    private javax.swing.JLabel editdobLabel;
    private javax.swing.JLabel editemailLabel;
    private javax.swing.JTextField editemailTextField;
    private javax.swing.JTextField editfirstNameTxtField;
    private javax.swing.JLabel editlastNameLabel;
    private javax.swing.JTextField editlastNameTxtField;
    private javax.swing.JLabel editpasswordLabel;
    private javax.swing.JPasswordField editpasswordPwdField;
    private javax.swing.JLabel editusernameLabel;
    private javax.swing.JTextField editusernameTxtField;
    private javax.swing.JLabel hiddenLoginId;
    private javax.swing.JLabel hiddenPatientId;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
